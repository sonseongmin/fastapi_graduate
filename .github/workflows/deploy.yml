deploy:
  needs: build-and-push
  runs-on: ubuntu-latest
  if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_KEY }}
  steps:
    - name: Deploy over SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script_stop: true
        envs: IMAGE_NAME,CONTAINER_NAME,PORT,APP_ENV
        script: |
          set -euo pipefail

          IMAGE="${IMAGE_NAME}:latest"
          NAME="${CONTAINER_NAME}"
          PORT="${PORT:-8000}"

          echo "[1/5] docker login (optional if registry is public)"
          if [ -n "${DOCKERHUB_USERNAME:-}" ] && [ -n "${DOCKERHUB_TOKEN:-}" ]; then
            echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin || true
          fi

          echo "[2/5] docker pull ${IMAGE}"
          docker pull "${IMAGE}"

          echo "[3/5] stop & remove existing container if any"
          if [ "$(docker ps -aq -f name=^/${NAME}\$)" ]; then
            docker rm -f "${NAME}" || true
          fi

          ENV_FILE_OPT=""
          if [ -n "${APP_ENV:-}" ]; then
            echo "[4/5] writing .env from secret"
            echo "${APP_ENV}" > .env
            ENV_FILE_OPT="--env-file .env"
          fi

          echo "[4/5] run new container"
          docker run -d \
            --name "${NAME}" \
            -p ${PORT}:8000 \
            ${ENV_FILE_OPT} \
            --restart unless-stopped \
            "${IMAGE}"

          if docker exec "${NAME}" sh -lc 'command -v alembic >/dev/null 2>&1'; then
            echo "[5/5] running alembic upgrade head"
            docker exec "${NAME}" sh -lc 'alembic upgrade head' || true
          else
            echo "[5/5] alembic not found in container. Skipping migrations."
          fi

          echo "âœ… Deploy finished."
